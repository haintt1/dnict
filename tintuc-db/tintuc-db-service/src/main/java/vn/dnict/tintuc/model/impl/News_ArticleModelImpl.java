/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dnict.tintuc.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

import vn.dnict.tintuc.model.News_Article;
import vn.dnict.tintuc.model.News_ArticleModel;

/**
 * The base model implementation for the News_Article service. Represents a row in the &quot;cw_News_Article&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>News_ArticleModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link News_ArticleImpl}.
 * </p>
 *
 * @author dnict
 * @see News_ArticleImpl
 * @generated
 */
public class News_ArticleModelImpl
	extends BaseModelImpl<News_Article> implements News_ArticleModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a news_ article model instance should use the <code>News_Article</code> interface instead.
	 */
	public static final String TABLE_NAME = "cw_News_Article";

	public static final Object[][] TABLE_COLUMNS = {
		{"id_", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"typeid", Types.BIGINT},
		{"title", Types.CLOB}, {"info", Types.VARCHAR}, {"content", Types.CLOB},
		{"createdby", Types.BIGINT}, {"createdtime", Types.TIMESTAMP},
		{"modifiedby", Types.BIGINT}, {"modifiedtime", Types.TIMESTAMP},
		{"nguoinhanid", Types.BIGINT}, {"nguoixulyid", Types.BIGINT},
		{"ngayxuly", Types.TIMESTAMP}, {"status", Types.INTEGER},
		{"language", Types.VARCHAR}, {"version", Types.BIGINT},
		{"delete_status", Types.INTEGER}, {"urlimagesmall", Types.VARCHAR},
		{"luotxem", Types.BIGINT}, {"isnoibat", Types.BIGINT},
		{"ngayxuatban", Types.TIMESTAMP}, {"ngayketthuc", Types.TIMESTAMP},
		{"ishethang", Types.BIGINT}, {"nguontin", Types.BIGINT},
		{"congtacvien", Types.VARCHAR}, {"loaitintuc", Types.INTEGER},
		{"tukhoa", Types.VARCHAR}, {"sotinanh", Types.INTEGER},
		{"isformbinhluan", Types.INTEGER}, {"isviewbinhluan", Types.INTEGER}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("id_", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("typeid", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("title", Types.CLOB);
		TABLE_COLUMNS_MAP.put("info", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("content", Types.CLOB);
		TABLE_COLUMNS_MAP.put("createdby", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createdtime", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedby", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("modifiedtime", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("nguoinhanid", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("nguoixulyid", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ngayxuly", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("language", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("version", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("delete_status", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("urlimagesmall", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("luotxem", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("isnoibat", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ngayxuatban", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ngayketthuc", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ishethang", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("nguontin", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("congtacvien", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("loaitintuc", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("tukhoa", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("sotinanh", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("isformbinhluan", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("isviewbinhluan", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE =
		"create table cw_News_Article (id_ LONG not null primary key,companyId LONG,groupId LONG,typeid LONG,title TEXT null,info STRING null,content TEXT null,createdby LONG,createdtime DATE null,modifiedby LONG,modifiedtime DATE null,nguoinhanid LONG,nguoixulyid LONG,ngayxuly DATE null,status INTEGER,language VARCHAR(75) null,version LONG,delete_status INTEGER,urlimagesmall TEXT null,luotxem LONG,isnoibat LONG,ngayxuatban DATE null,ngayketthuc DATE null,ishethang LONG,nguontin LONG,congtacvien STRING null,loaitintuc INTEGER,tukhoa VARCHAR(75) null,sotinanh INTEGER,isformbinhluan INTEGER,isviewbinhluan INTEGER)";

	public static final String TABLE_SQL_DROP = "drop table cw_News_Article";

	public static final String ORDER_BY_JPQL = " ORDER BY news_Article.id DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY cw_News_Article.id_ DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public News_ArticleModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return News_Article.class;
	}

	@Override
	public String getModelClassName() {
		return News_Article.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<News_Article, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<News_Article, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<News_Article, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((News_Article)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<News_Article, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<News_Article, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(News_Article)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<News_Article, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<News_Article, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, News_Article>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			News_Article.class.getClassLoader(), News_Article.class,
			ModelWrapper.class);

		try {
			Constructor<News_Article> constructor =
				(Constructor<News_Article>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<News_Article, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<News_Article, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<News_Article, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<News_Article, Object>>();
		Map<String, BiConsumer<News_Article, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<News_Article, ?>>();

		attributeGetterFunctions.put("id", News_Article::getId);
		attributeSetterBiConsumers.put(
			"id", (BiConsumer<News_Article, Long>)News_Article::setId);
		attributeGetterFunctions.put("companyId", News_Article::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<News_Article, Long>)News_Article::setCompanyId);
		attributeGetterFunctions.put("groupId", News_Article::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId",
			(BiConsumer<News_Article, Long>)News_Article::setGroupId);
		attributeGetterFunctions.put("typeid", News_Article::getTypeid);
		attributeSetterBiConsumers.put(
			"typeid", (BiConsumer<News_Article, Long>)News_Article::setTypeid);
		attributeGetterFunctions.put("title", News_Article::getTitle);
		attributeSetterBiConsumers.put(
			"title", (BiConsumer<News_Article, String>)News_Article::setTitle);
		attributeGetterFunctions.put("info", News_Article::getInfo);
		attributeSetterBiConsumers.put(
			"info", (BiConsumer<News_Article, String>)News_Article::setInfo);
		attributeGetterFunctions.put("content", News_Article::getContent);
		attributeSetterBiConsumers.put(
			"content",
			(BiConsumer<News_Article, String>)News_Article::setContent);
		attributeGetterFunctions.put("createdby", News_Article::getCreatedby);
		attributeSetterBiConsumers.put(
			"createdby",
			(BiConsumer<News_Article, Long>)News_Article::setCreatedby);
		attributeGetterFunctions.put(
			"createdtime", News_Article::getCreatedtime);
		attributeSetterBiConsumers.put(
			"createdtime",
			(BiConsumer<News_Article, Date>)News_Article::setCreatedtime);
		attributeGetterFunctions.put("modifiedby", News_Article::getModifiedby);
		attributeSetterBiConsumers.put(
			"modifiedby",
			(BiConsumer<News_Article, Long>)News_Article::setModifiedby);
		attributeGetterFunctions.put(
			"modifiedtime", News_Article::getModifiedtime);
		attributeSetterBiConsumers.put(
			"modifiedtime",
			(BiConsumer<News_Article, Date>)News_Article::setModifiedtime);
		attributeGetterFunctions.put(
			"nguoinhanid", News_Article::getNguoinhanid);
		attributeSetterBiConsumers.put(
			"nguoinhanid",
			(BiConsumer<News_Article, Long>)News_Article::setNguoinhanid);
		attributeGetterFunctions.put(
			"nguoixulyid", News_Article::getNguoixulyid);
		attributeSetterBiConsumers.put(
			"nguoixulyid",
			(BiConsumer<News_Article, Long>)News_Article::setNguoixulyid);
		attributeGetterFunctions.put("ngayxuly", News_Article::getNgayxuly);
		attributeSetterBiConsumers.put(
			"ngayxuly",
			(BiConsumer<News_Article, Date>)News_Article::setNgayxuly);
		attributeGetterFunctions.put("status", News_Article::getStatus);
		attributeSetterBiConsumers.put(
			"status",
			(BiConsumer<News_Article, Integer>)News_Article::setStatus);
		attributeGetterFunctions.put("language", News_Article::getLanguage);
		attributeSetterBiConsumers.put(
			"language",
			(BiConsumer<News_Article, String>)News_Article::setLanguage);
		attributeGetterFunctions.put("version", News_Article::getVersion);
		attributeSetterBiConsumers.put(
			"version",
			(BiConsumer<News_Article, Long>)News_Article::setVersion);
		attributeGetterFunctions.put(
			"delete_status", News_Article::getDelete_status);
		attributeSetterBiConsumers.put(
			"delete_status",
			(BiConsumer<News_Article, Integer>)News_Article::setDelete_status);
		attributeGetterFunctions.put(
			"urlimagesmall", News_Article::getUrlimagesmall);
		attributeSetterBiConsumers.put(
			"urlimagesmall",
			(BiConsumer<News_Article, String>)News_Article::setUrlimagesmall);
		attributeGetterFunctions.put("luotxem", News_Article::getLuotxem);
		attributeSetterBiConsumers.put(
			"luotxem",
			(BiConsumer<News_Article, Long>)News_Article::setLuotxem);
		attributeGetterFunctions.put("isnoibat", News_Article::getIsnoibat);
		attributeSetterBiConsumers.put(
			"isnoibat",
			(BiConsumer<News_Article, Long>)News_Article::setIsnoibat);
		attributeGetterFunctions.put(
			"ngayxuatban", News_Article::getNgayxuatban);
		attributeSetterBiConsumers.put(
			"ngayxuatban",
			(BiConsumer<News_Article, Date>)News_Article::setNgayxuatban);
		attributeGetterFunctions.put(
			"ngayketthuc", News_Article::getNgayketthuc);
		attributeSetterBiConsumers.put(
			"ngayketthuc",
			(BiConsumer<News_Article, Date>)News_Article::setNgayketthuc);
		attributeGetterFunctions.put("ishethang", News_Article::getIshethang);
		attributeSetterBiConsumers.put(
			"ishethang",
			(BiConsumer<News_Article, Long>)News_Article::setIshethang);
		attributeGetterFunctions.put("nguontin", News_Article::getNguontin);
		attributeSetterBiConsumers.put(
			"nguontin",
			(BiConsumer<News_Article, Long>)News_Article::setNguontin);
		attributeGetterFunctions.put(
			"congtacvien", News_Article::getCongtacvien);
		attributeSetterBiConsumers.put(
			"congtacvien",
			(BiConsumer<News_Article, String>)News_Article::setCongtacvien);
		attributeGetterFunctions.put("loaitintuc", News_Article::getLoaitintuc);
		attributeSetterBiConsumers.put(
			"loaitintuc",
			(BiConsumer<News_Article, Integer>)News_Article::setLoaitintuc);
		attributeGetterFunctions.put("tukhoa", News_Article::getTukhoa);
		attributeSetterBiConsumers.put(
			"tukhoa",
			(BiConsumer<News_Article, String>)News_Article::setTukhoa);
		attributeGetterFunctions.put("sotinanh", News_Article::getSotinanh);
		attributeSetterBiConsumers.put(
			"sotinanh",
			(BiConsumer<News_Article, Integer>)News_Article::setSotinanh);
		attributeGetterFunctions.put(
			"isformbinhluan", News_Article::getIsformbinhluan);
		attributeSetterBiConsumers.put(
			"isformbinhluan",
			(BiConsumer<News_Article, Integer>)News_Article::setIsformbinhluan);
		attributeGetterFunctions.put(
			"isviewbinhluan", News_Article::getIsviewbinhluan);
		attributeSetterBiConsumers.put(
			"isviewbinhluan",
			(BiConsumer<News_Article, Integer>)News_Article::setIsviewbinhluan);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_id = id;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@Override
	public long getTypeid() {
		return _typeid;
	}

	@Override
	public void setTypeid(long typeid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_typeid = typeid;
	}

	@Override
	public String getTitle() {
		if (_title == null) {
			return "";
		}
		else {
			return _title;
		}
	}

	@Override
	public void setTitle(String title) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_title = title;
	}

	@Override
	public String getInfo() {
		if (_info == null) {
			return "";
		}
		else {
			return _info;
		}
	}

	@Override
	public void setInfo(String info) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_info = info;
	}

	@Override
	public String getContent() {
		if (_content == null) {
			return "";
		}
		else {
			return _content;
		}
	}

	@Override
	public void setContent(String content) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_content = content;
	}

	@Override
	public long getCreatedby() {
		return _createdby;
	}

	@Override
	public void setCreatedby(long createdby) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createdby = createdby;
	}

	@Override
	public Date getCreatedtime() {
		return _createdtime;
	}

	@Override
	public void setCreatedtime(Date createdtime) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createdtime = createdtime;
	}

	@Override
	public long getModifiedby() {
		return _modifiedby;
	}

	@Override
	public void setModifiedby(long modifiedby) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedby = modifiedby;
	}

	@Override
	public Date getModifiedtime() {
		return _modifiedtime;
	}

	@Override
	public void setModifiedtime(Date modifiedtime) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedtime = modifiedtime;
	}

	@Override
	public long getNguoinhanid() {
		return _nguoinhanid;
	}

	@Override
	public void setNguoinhanid(long nguoinhanid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nguoinhanid = nguoinhanid;
	}

	@Override
	public long getNguoixulyid() {
		return _nguoixulyid;
	}

	@Override
	public void setNguoixulyid(long nguoixulyid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nguoixulyid = nguoixulyid;
	}

	@Override
	public Date getNgayxuly() {
		return _ngayxuly;
	}

	@Override
	public void setNgayxuly(Date ngayxuly) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ngayxuly = ngayxuly;
	}

	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_status = status;
	}

	@Override
	public String getLanguage() {
		if (_language == null) {
			return "";
		}
		else {
			return _language;
		}
	}

	@Override
	public void setLanguage(String language) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_language = language;
	}

	@Override
	public long getVersion() {
		return _version;
	}

	@Override
	public void setVersion(long version) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_version = version;
	}

	@Override
	public int getDelete_status() {
		return _delete_status;
	}

	@Override
	public void setDelete_status(int delete_status) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_delete_status = delete_status;
	}

	@Override
	public String getUrlimagesmall() {
		if (_urlimagesmall == null) {
			return "";
		}
		else {
			return _urlimagesmall;
		}
	}

	@Override
	public void setUrlimagesmall(String urlimagesmall) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_urlimagesmall = urlimagesmall;
	}

	@Override
	public long getLuotxem() {
		return _luotxem;
	}

	@Override
	public void setLuotxem(long luotxem) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_luotxem = luotxem;
	}

	@Override
	public long getIsnoibat() {
		return _isnoibat;
	}

	@Override
	public void setIsnoibat(long isnoibat) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_isnoibat = isnoibat;
	}

	@Override
	public Date getNgayxuatban() {
		return _ngayxuatban;
	}

	@Override
	public void setNgayxuatban(Date ngayxuatban) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ngayxuatban = ngayxuatban;
	}

	@Override
	public Date getNgayketthuc() {
		return _ngayketthuc;
	}

	@Override
	public void setNgayketthuc(Date ngayketthuc) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ngayketthuc = ngayketthuc;
	}

	@Override
	public long getIshethang() {
		return _ishethang;
	}

	@Override
	public void setIshethang(long ishethang) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ishethang = ishethang;
	}

	@Override
	public long getNguontin() {
		return _nguontin;
	}

	@Override
	public void setNguontin(long nguontin) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nguontin = nguontin;
	}

	@Override
	public String getCongtacvien() {
		if (_congtacvien == null) {
			return "";
		}
		else {
			return _congtacvien;
		}
	}

	@Override
	public void setCongtacvien(String congtacvien) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_congtacvien = congtacvien;
	}

	@Override
	public int getLoaitintuc() {
		return _loaitintuc;
	}

	@Override
	public void setLoaitintuc(int loaitintuc) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_loaitintuc = loaitintuc;
	}

	@Override
	public String getTukhoa() {
		if (_tukhoa == null) {
			return "";
		}
		else {
			return _tukhoa;
		}
	}

	@Override
	public void setTukhoa(String tukhoa) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tukhoa = tukhoa;
	}

	@Override
	public int getSotinanh() {
		return _sotinanh;
	}

	@Override
	public void setSotinanh(int sotinanh) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sotinanh = sotinanh;
	}

	@Override
	public int getIsformbinhluan() {
		return _isformbinhluan;
	}

	@Override
	public void setIsformbinhluan(int isformbinhluan) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_isformbinhluan = isformbinhluan;
	}

	@Override
	public int getIsviewbinhluan() {
		return _isviewbinhluan;
	}

	@Override
	public void setIsviewbinhluan(int isviewbinhluan) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_isviewbinhluan = isviewbinhluan;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), News_Article.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public News_Article toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, News_Article>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		News_ArticleImpl news_ArticleImpl = new News_ArticleImpl();

		news_ArticleImpl.setId(getId());
		news_ArticleImpl.setCompanyId(getCompanyId());
		news_ArticleImpl.setGroupId(getGroupId());
		news_ArticleImpl.setTypeid(getTypeid());
		news_ArticleImpl.setTitle(getTitle());
		news_ArticleImpl.setInfo(getInfo());
		news_ArticleImpl.setContent(getContent());
		news_ArticleImpl.setCreatedby(getCreatedby());
		news_ArticleImpl.setCreatedtime(getCreatedtime());
		news_ArticleImpl.setModifiedby(getModifiedby());
		news_ArticleImpl.setModifiedtime(getModifiedtime());
		news_ArticleImpl.setNguoinhanid(getNguoinhanid());
		news_ArticleImpl.setNguoixulyid(getNguoixulyid());
		news_ArticleImpl.setNgayxuly(getNgayxuly());
		news_ArticleImpl.setStatus(getStatus());
		news_ArticleImpl.setLanguage(getLanguage());
		news_ArticleImpl.setVersion(getVersion());
		news_ArticleImpl.setDelete_status(getDelete_status());
		news_ArticleImpl.setUrlimagesmall(getUrlimagesmall());
		news_ArticleImpl.setLuotxem(getLuotxem());
		news_ArticleImpl.setIsnoibat(getIsnoibat());
		news_ArticleImpl.setNgayxuatban(getNgayxuatban());
		news_ArticleImpl.setNgayketthuc(getNgayketthuc());
		news_ArticleImpl.setIshethang(getIshethang());
		news_ArticleImpl.setNguontin(getNguontin());
		news_ArticleImpl.setCongtacvien(getCongtacvien());
		news_ArticleImpl.setLoaitintuc(getLoaitintuc());
		news_ArticleImpl.setTukhoa(getTukhoa());
		news_ArticleImpl.setSotinanh(getSotinanh());
		news_ArticleImpl.setIsformbinhluan(getIsformbinhluan());
		news_ArticleImpl.setIsviewbinhluan(getIsviewbinhluan());

		news_ArticleImpl.resetOriginalValues();

		return news_ArticleImpl;
	}

	@Override
	public int compareTo(News_Article news_Article) {
		int value = 0;

		if (getId() < news_Article.getId()) {
			value = -1;
		}
		else if (getId() > news_Article.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof News_Article)) {
			return false;
		}

		News_Article news_Article = (News_Article)object;

		long primaryKey = news_Article.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<News_Article> toCacheModel() {
		News_ArticleCacheModel news_ArticleCacheModel =
			new News_ArticleCacheModel();

		news_ArticleCacheModel.id = getId();

		news_ArticleCacheModel.companyId = getCompanyId();

		news_ArticleCacheModel.groupId = getGroupId();

		news_ArticleCacheModel.typeid = getTypeid();

		news_ArticleCacheModel.title = getTitle();

		String title = news_ArticleCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			news_ArticleCacheModel.title = null;
		}

		news_ArticleCacheModel.info = getInfo();

		String info = news_ArticleCacheModel.info;

		if ((info != null) && (info.length() == 0)) {
			news_ArticleCacheModel.info = null;
		}

		news_ArticleCacheModel.content = getContent();

		String content = news_ArticleCacheModel.content;

		if ((content != null) && (content.length() == 0)) {
			news_ArticleCacheModel.content = null;
		}

		news_ArticleCacheModel.createdby = getCreatedby();

		Date createdtime = getCreatedtime();

		if (createdtime != null) {
			news_ArticleCacheModel.createdtime = createdtime.getTime();
		}
		else {
			news_ArticleCacheModel.createdtime = Long.MIN_VALUE;
		}

		news_ArticleCacheModel.modifiedby = getModifiedby();

		Date modifiedtime = getModifiedtime();

		if (modifiedtime != null) {
			news_ArticleCacheModel.modifiedtime = modifiedtime.getTime();
		}
		else {
			news_ArticleCacheModel.modifiedtime = Long.MIN_VALUE;
		}

		news_ArticleCacheModel.nguoinhanid = getNguoinhanid();

		news_ArticleCacheModel.nguoixulyid = getNguoixulyid();

		Date ngayxuly = getNgayxuly();

		if (ngayxuly != null) {
			news_ArticleCacheModel.ngayxuly = ngayxuly.getTime();
		}
		else {
			news_ArticleCacheModel.ngayxuly = Long.MIN_VALUE;
		}

		news_ArticleCacheModel.status = getStatus();

		news_ArticleCacheModel.language = getLanguage();

		String language = news_ArticleCacheModel.language;

		if ((language != null) && (language.length() == 0)) {
			news_ArticleCacheModel.language = null;
		}

		news_ArticleCacheModel.version = getVersion();

		news_ArticleCacheModel.delete_status = getDelete_status();

		news_ArticleCacheModel.urlimagesmall = getUrlimagesmall();

		String urlimagesmall = news_ArticleCacheModel.urlimagesmall;

		if ((urlimagesmall != null) && (urlimagesmall.length() == 0)) {
			news_ArticleCacheModel.urlimagesmall = null;
		}

		news_ArticleCacheModel.luotxem = getLuotxem();

		news_ArticleCacheModel.isnoibat = getIsnoibat();

		Date ngayxuatban = getNgayxuatban();

		if (ngayxuatban != null) {
			news_ArticleCacheModel.ngayxuatban = ngayxuatban.getTime();
		}
		else {
			news_ArticleCacheModel.ngayxuatban = Long.MIN_VALUE;
		}

		Date ngayketthuc = getNgayketthuc();

		if (ngayketthuc != null) {
			news_ArticleCacheModel.ngayketthuc = ngayketthuc.getTime();
		}
		else {
			news_ArticleCacheModel.ngayketthuc = Long.MIN_VALUE;
		}

		news_ArticleCacheModel.ishethang = getIshethang();

		news_ArticleCacheModel.nguontin = getNguontin();

		news_ArticleCacheModel.congtacvien = getCongtacvien();

		String congtacvien = news_ArticleCacheModel.congtacvien;

		if ((congtacvien != null) && (congtacvien.length() == 0)) {
			news_ArticleCacheModel.congtacvien = null;
		}

		news_ArticleCacheModel.loaitintuc = getLoaitintuc();

		news_ArticleCacheModel.tukhoa = getTukhoa();

		String tukhoa = news_ArticleCacheModel.tukhoa;

		if ((tukhoa != null) && (tukhoa.length() == 0)) {
			news_ArticleCacheModel.tukhoa = null;
		}

		news_ArticleCacheModel.sotinanh = getSotinanh();

		news_ArticleCacheModel.isformbinhluan = getIsformbinhluan();

		news_ArticleCacheModel.isviewbinhluan = getIsviewbinhluan();

		return news_ArticleCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<News_Article, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<News_Article, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<News_Article, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((News_Article)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<News_Article, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<News_Article, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<News_Article, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((News_Article)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, News_Article>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private long _id;
	private long _companyId;
	private long _groupId;
	private long _typeid;
	private String _title;
	private String _info;
	private String _content;
	private long _createdby;
	private Date _createdtime;
	private long _modifiedby;
	private Date _modifiedtime;
	private long _nguoinhanid;
	private long _nguoixulyid;
	private Date _ngayxuly;
	private int _status;
	private String _language;
	private long _version;
	private int _delete_status;
	private String _urlimagesmall;
	private long _luotxem;
	private long _isnoibat;
	private Date _ngayxuatban;
	private Date _ngayketthuc;
	private long _ishethang;
	private long _nguontin;
	private String _congtacvien;
	private int _loaitintuc;
	private String _tukhoa;
	private int _sotinanh;
	private int _isformbinhluan;
	private int _isviewbinhluan;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<News_Article, Object> function = _attributeGetterFunctions.get(
			columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((News_Article)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("id_", _id);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("typeid", _typeid);
		_columnOriginalValues.put("title", _title);
		_columnOriginalValues.put("info", _info);
		_columnOriginalValues.put("content", _content);
		_columnOriginalValues.put("createdby", _createdby);
		_columnOriginalValues.put("createdtime", _createdtime);
		_columnOriginalValues.put("modifiedby", _modifiedby);
		_columnOriginalValues.put("modifiedtime", _modifiedtime);
		_columnOriginalValues.put("nguoinhanid", _nguoinhanid);
		_columnOriginalValues.put("nguoixulyid", _nguoixulyid);
		_columnOriginalValues.put("ngayxuly", _ngayxuly);
		_columnOriginalValues.put("status", _status);
		_columnOriginalValues.put("language", _language);
		_columnOriginalValues.put("version", _version);
		_columnOriginalValues.put("delete_status", _delete_status);
		_columnOriginalValues.put("urlimagesmall", _urlimagesmall);
		_columnOriginalValues.put("luotxem", _luotxem);
		_columnOriginalValues.put("isnoibat", _isnoibat);
		_columnOriginalValues.put("ngayxuatban", _ngayxuatban);
		_columnOriginalValues.put("ngayketthuc", _ngayketthuc);
		_columnOriginalValues.put("ishethang", _ishethang);
		_columnOriginalValues.put("nguontin", _nguontin);
		_columnOriginalValues.put("congtacvien", _congtacvien);
		_columnOriginalValues.put("loaitintuc", _loaitintuc);
		_columnOriginalValues.put("tukhoa", _tukhoa);
		_columnOriginalValues.put("sotinanh", _sotinanh);
		_columnOriginalValues.put("isformbinhluan", _isformbinhluan);
		_columnOriginalValues.put("isviewbinhluan", _isviewbinhluan);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("id_", "id");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("id_", 1L);

		columnBitmasks.put("companyId", 2L);

		columnBitmasks.put("groupId", 4L);

		columnBitmasks.put("typeid", 8L);

		columnBitmasks.put("title", 16L);

		columnBitmasks.put("info", 32L);

		columnBitmasks.put("content", 64L);

		columnBitmasks.put("createdby", 128L);

		columnBitmasks.put("createdtime", 256L);

		columnBitmasks.put("modifiedby", 512L);

		columnBitmasks.put("modifiedtime", 1024L);

		columnBitmasks.put("nguoinhanid", 2048L);

		columnBitmasks.put("nguoixulyid", 4096L);

		columnBitmasks.put("ngayxuly", 8192L);

		columnBitmasks.put("status", 16384L);

		columnBitmasks.put("language", 32768L);

		columnBitmasks.put("version", 65536L);

		columnBitmasks.put("delete_status", 131072L);

		columnBitmasks.put("urlimagesmall", 262144L);

		columnBitmasks.put("luotxem", 524288L);

		columnBitmasks.put("isnoibat", 1048576L);

		columnBitmasks.put("ngayxuatban", 2097152L);

		columnBitmasks.put("ngayketthuc", 4194304L);

		columnBitmasks.put("ishethang", 8388608L);

		columnBitmasks.put("nguontin", 16777216L);

		columnBitmasks.put("congtacvien", 33554432L);

		columnBitmasks.put("loaitintuc", 67108864L);

		columnBitmasks.put("tukhoa", 134217728L);

		columnBitmasks.put("sotinanh", 268435456L);

		columnBitmasks.put("isformbinhluan", 536870912L);

		columnBitmasks.put("isviewbinhluan", 1073741824L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private News_Article _escapedModel;

}
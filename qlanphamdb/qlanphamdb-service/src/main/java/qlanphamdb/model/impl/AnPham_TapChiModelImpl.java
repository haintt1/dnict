/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package qlanphamdb.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

import qlanphamdb.model.AnPham_TapChi;
import qlanphamdb.model.AnPham_TapChiModel;

/**
 * The base model implementation for the AnPham_TapChi service. Represents a row in the &quot;cw_AnPham_TapChi&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>AnPham_TapChiModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AnPham_TapChiImpl}.
 * </p>
 *
 * @author dnict
 * @see AnPham_TapChiImpl
 * @generated
 */
public class AnPham_TapChiModelImpl
	extends BaseModelImpl<AnPham_TapChi> implements AnPham_TapChiModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a an pham_ tap chi model instance should use the <code>AnPham_TapChi</code> interface instead.
	 */
	public static final String TABLE_NAME = "cw_AnPham_TapChi";

	public static final Object[][] TABLE_COLUMNS = {
		{"id_", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"ten", Types.VARCHAR},
		{"slug", Types.VARCHAR}, {"moTa", Types.VARCHAR},
		{"anhDaiDien", Types.VARCHAR}, {"loaiId", Types.BIGINT},
		{"deCuongId", Types.BIGINT}, {"noiDung", Types.VARCHAR},
		{"tuKhoa", Types.VARCHAR}, {"phienBan", Types.BIGINT},
		{"luotXem", Types.BIGINT}, {"nguoiTao", Types.BIGINT},
		{"ngayTao", Types.TIMESTAMP}, {"nguoiSua", Types.BIGINT},
		{"ngaySua", Types.TIMESTAMP}, {"nguoiNhan", Types.BIGINT},
		{"nguoiXuLy", Types.BIGINT}, {"ngayXuLy", Types.TIMESTAMP},
		{"language", Types.VARCHAR}, {"loaiTin", Types.INTEGER},
		{"isFormHienBinhLuan", Types.INTEGER},
		{"isFormViewBinhLuan", Types.INTEGER}, {"status", Types.INTEGER},
		{"orders", Types.BIGINT}, {"delete_status", Types.INTEGER}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("id_", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ten", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("slug", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("moTa", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("anhDaiDien", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("loaiId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("deCuongId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("noiDung", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tuKhoa", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("phienBan", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("luotXem", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("nguoiTao", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ngayTao", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("nguoiSua", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ngaySua", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("nguoiNhan", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("nguoiXuLy", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ngayXuLy", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("language", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("loaiTin", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("isFormHienBinhLuan", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("isFormViewBinhLuan", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("orders", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("delete_status", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE =
		"create table cw_AnPham_TapChi (id_ LONG not null primary key,groupId LONG,companyId LONG,ten VARCHAR(75) null,slug VARCHAR(75) null,moTa VARCHAR(75) null,anhDaiDien VARCHAR(75) null,loaiId LONG,deCuongId LONG,noiDung VARCHAR(75) null,tuKhoa VARCHAR(75) null,phienBan LONG,luotXem LONG,nguoiTao LONG,ngayTao DATE null,nguoiSua LONG,ngaySua DATE null,nguoiNhan LONG,nguoiXuLy LONG,ngayXuLy DATE null,language VARCHAR(75) null,loaiTin INTEGER,isFormHienBinhLuan INTEGER,isFormViewBinhLuan INTEGER,status INTEGER,orders LONG,delete_status INTEGER)";

	public static final String TABLE_SQL_DROP = "drop table cw_AnPham_TapChi";

	public static final String ORDER_BY_JPQL =
		" ORDER BY anPham_TapChi.id DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY cw_AnPham_TapChi.id_ DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public AnPham_TapChiModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AnPham_TapChi.class;
	}

	@Override
	public String getModelClassName() {
		return AnPham_TapChi.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<AnPham_TapChi, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<AnPham_TapChi, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AnPham_TapChi, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((AnPham_TapChi)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<AnPham_TapChi, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<AnPham_TapChi, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(AnPham_TapChi)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<AnPham_TapChi, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<AnPham_TapChi, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, AnPham_TapChi>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			AnPham_TapChi.class.getClassLoader(), AnPham_TapChi.class,
			ModelWrapper.class);

		try {
			Constructor<AnPham_TapChi> constructor =
				(Constructor<AnPham_TapChi>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<AnPham_TapChi, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<AnPham_TapChi, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<AnPham_TapChi, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<AnPham_TapChi, Object>>();
		Map<String, BiConsumer<AnPham_TapChi, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<AnPham_TapChi, ?>>();

		attributeGetterFunctions.put("id", AnPham_TapChi::getId);
		attributeSetterBiConsumers.put(
			"id", (BiConsumer<AnPham_TapChi, Long>)AnPham_TapChi::setId);
		attributeGetterFunctions.put("groupId", AnPham_TapChi::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId",
			(BiConsumer<AnPham_TapChi, Long>)AnPham_TapChi::setGroupId);
		attributeGetterFunctions.put("companyId", AnPham_TapChi::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<AnPham_TapChi, Long>)AnPham_TapChi::setCompanyId);
		attributeGetterFunctions.put("ten", AnPham_TapChi::getTen);
		attributeSetterBiConsumers.put(
			"ten", (BiConsumer<AnPham_TapChi, String>)AnPham_TapChi::setTen);
		attributeGetterFunctions.put("slug", AnPham_TapChi::getSlug);
		attributeSetterBiConsumers.put(
			"slug", (BiConsumer<AnPham_TapChi, String>)AnPham_TapChi::setSlug);
		attributeGetterFunctions.put("moTa", AnPham_TapChi::getMoTa);
		attributeSetterBiConsumers.put(
			"moTa", (BiConsumer<AnPham_TapChi, String>)AnPham_TapChi::setMoTa);
		attributeGetterFunctions.put(
			"anhDaiDien", AnPham_TapChi::getAnhDaiDien);
		attributeSetterBiConsumers.put(
			"anhDaiDien",
			(BiConsumer<AnPham_TapChi, String>)AnPham_TapChi::setAnhDaiDien);
		attributeGetterFunctions.put("loaiId", AnPham_TapChi::getLoaiId);
		attributeSetterBiConsumers.put(
			"loaiId",
			(BiConsumer<AnPham_TapChi, Long>)AnPham_TapChi::setLoaiId);
		attributeGetterFunctions.put("deCuongId", AnPham_TapChi::getDeCuongId);
		attributeSetterBiConsumers.put(
			"deCuongId",
			(BiConsumer<AnPham_TapChi, Long>)AnPham_TapChi::setDeCuongId);
		attributeGetterFunctions.put("noiDung", AnPham_TapChi::getNoiDung);
		attributeSetterBiConsumers.put(
			"noiDung",
			(BiConsumer<AnPham_TapChi, String>)AnPham_TapChi::setNoiDung);
		attributeGetterFunctions.put("tuKhoa", AnPham_TapChi::getTuKhoa);
		attributeSetterBiConsumers.put(
			"tuKhoa",
			(BiConsumer<AnPham_TapChi, String>)AnPham_TapChi::setTuKhoa);
		attributeGetterFunctions.put("phienBan", AnPham_TapChi::getPhienBan);
		attributeSetterBiConsumers.put(
			"phienBan",
			(BiConsumer<AnPham_TapChi, Long>)AnPham_TapChi::setPhienBan);
		attributeGetterFunctions.put("luotXem", AnPham_TapChi::getLuotXem);
		attributeSetterBiConsumers.put(
			"luotXem",
			(BiConsumer<AnPham_TapChi, Long>)AnPham_TapChi::setLuotXem);
		attributeGetterFunctions.put("nguoiTao", AnPham_TapChi::getNguoiTao);
		attributeSetterBiConsumers.put(
			"nguoiTao",
			(BiConsumer<AnPham_TapChi, Long>)AnPham_TapChi::setNguoiTao);
		attributeGetterFunctions.put("ngayTao", AnPham_TapChi::getNgayTao);
		attributeSetterBiConsumers.put(
			"ngayTao",
			(BiConsumer<AnPham_TapChi, Date>)AnPham_TapChi::setNgayTao);
		attributeGetterFunctions.put("nguoiSua", AnPham_TapChi::getNguoiSua);
		attributeSetterBiConsumers.put(
			"nguoiSua",
			(BiConsumer<AnPham_TapChi, Long>)AnPham_TapChi::setNguoiSua);
		attributeGetterFunctions.put("ngaySua", AnPham_TapChi::getNgaySua);
		attributeSetterBiConsumers.put(
			"ngaySua",
			(BiConsumer<AnPham_TapChi, Date>)AnPham_TapChi::setNgaySua);
		attributeGetterFunctions.put("nguoiNhan", AnPham_TapChi::getNguoiNhan);
		attributeSetterBiConsumers.put(
			"nguoiNhan",
			(BiConsumer<AnPham_TapChi, Long>)AnPham_TapChi::setNguoiNhan);
		attributeGetterFunctions.put("nguoiXuLy", AnPham_TapChi::getNguoiXuLy);
		attributeSetterBiConsumers.put(
			"nguoiXuLy",
			(BiConsumer<AnPham_TapChi, Long>)AnPham_TapChi::setNguoiXuLy);
		attributeGetterFunctions.put("ngayXuLy", AnPham_TapChi::getNgayXuLy);
		attributeSetterBiConsumers.put(
			"ngayXuLy",
			(BiConsumer<AnPham_TapChi, Date>)AnPham_TapChi::setNgayXuLy);
		attributeGetterFunctions.put("language", AnPham_TapChi::getLanguage);
		attributeSetterBiConsumers.put(
			"language",
			(BiConsumer<AnPham_TapChi, String>)AnPham_TapChi::setLanguage);
		attributeGetterFunctions.put("loaiTin", AnPham_TapChi::getLoaiTin);
		attributeSetterBiConsumers.put(
			"loaiTin",
			(BiConsumer<AnPham_TapChi, Integer>)AnPham_TapChi::setLoaiTin);
		attributeGetterFunctions.put(
			"isFormHienBinhLuan", AnPham_TapChi::getIsFormHienBinhLuan);
		attributeSetterBiConsumers.put(
			"isFormHienBinhLuan",
			(BiConsumer<AnPham_TapChi, Integer>)
				AnPham_TapChi::setIsFormHienBinhLuan);
		attributeGetterFunctions.put(
			"isFormViewBinhLuan", AnPham_TapChi::getIsFormViewBinhLuan);
		attributeSetterBiConsumers.put(
			"isFormViewBinhLuan",
			(BiConsumer<AnPham_TapChi, Integer>)
				AnPham_TapChi::setIsFormViewBinhLuan);
		attributeGetterFunctions.put("status", AnPham_TapChi::getStatus);
		attributeSetterBiConsumers.put(
			"status",
			(BiConsumer<AnPham_TapChi, Integer>)AnPham_TapChi::setStatus);
		attributeGetterFunctions.put("orders", AnPham_TapChi::getOrders);
		attributeSetterBiConsumers.put(
			"orders",
			(BiConsumer<AnPham_TapChi, Long>)AnPham_TapChi::setOrders);
		attributeGetterFunctions.put(
			"delete_status", AnPham_TapChi::getDelete_status);
		attributeSetterBiConsumers.put(
			"delete_status",
			(BiConsumer<AnPham_TapChi, Integer>)
				AnPham_TapChi::setDelete_status);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_id = id;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@Override
	public String getTen() {
		if (_ten == null) {
			return "";
		}
		else {
			return _ten;
		}
	}

	@Override
	public void setTen(String ten) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ten = ten;
	}

	@Override
	public String getSlug() {
		if (_slug == null) {
			return "";
		}
		else {
			return _slug;
		}
	}

	@Override
	public void setSlug(String slug) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_slug = slug;
	}

	@Override
	public String getMoTa() {
		if (_moTa == null) {
			return "";
		}
		else {
			return _moTa;
		}
	}

	@Override
	public void setMoTa(String moTa) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_moTa = moTa;
	}

	@Override
	public String getAnhDaiDien() {
		if (_anhDaiDien == null) {
			return "";
		}
		else {
			return _anhDaiDien;
		}
	}

	@Override
	public void setAnhDaiDien(String anhDaiDien) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_anhDaiDien = anhDaiDien;
	}

	@Override
	public long getLoaiId() {
		return _loaiId;
	}

	@Override
	public void setLoaiId(long loaiId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_loaiId = loaiId;
	}

	@Override
	public long getDeCuongId() {
		return _deCuongId;
	}

	@Override
	public void setDeCuongId(long deCuongId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_deCuongId = deCuongId;
	}

	@Override
	public String getNoiDung() {
		if (_noiDung == null) {
			return "";
		}
		else {
			return _noiDung;
		}
	}

	@Override
	public void setNoiDung(String noiDung) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_noiDung = noiDung;
	}

	@Override
	public String getTuKhoa() {
		if (_tuKhoa == null) {
			return "";
		}
		else {
			return _tuKhoa;
		}
	}

	@Override
	public void setTuKhoa(String tuKhoa) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tuKhoa = tuKhoa;
	}

	@Override
	public long getPhienBan() {
		return _phienBan;
	}

	@Override
	public void setPhienBan(long phienBan) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_phienBan = phienBan;
	}

	@Override
	public long getLuotXem() {
		return _luotXem;
	}

	@Override
	public void setLuotXem(long luotXem) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_luotXem = luotXem;
	}

	@Override
	public long getNguoiTao() {
		return _nguoiTao;
	}

	@Override
	public void setNguoiTao(long nguoiTao) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nguoiTao = nguoiTao;
	}

	@Override
	public Date getNgayTao() {
		return _ngayTao;
	}

	@Override
	public void setNgayTao(Date ngayTao) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ngayTao = ngayTao;
	}

	@Override
	public long getNguoiSua() {
		return _nguoiSua;
	}

	@Override
	public void setNguoiSua(long nguoiSua) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nguoiSua = nguoiSua;
	}

	@Override
	public Date getNgaySua() {
		return _ngaySua;
	}

	@Override
	public void setNgaySua(Date ngaySua) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ngaySua = ngaySua;
	}

	@Override
	public long getNguoiNhan() {
		return _nguoiNhan;
	}

	@Override
	public void setNguoiNhan(long nguoiNhan) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nguoiNhan = nguoiNhan;
	}

	@Override
	public long getNguoiXuLy() {
		return _nguoiXuLy;
	}

	@Override
	public void setNguoiXuLy(long nguoiXuLy) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nguoiXuLy = nguoiXuLy;
	}

	@Override
	public Date getNgayXuLy() {
		return _ngayXuLy;
	}

	@Override
	public void setNgayXuLy(Date ngayXuLy) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ngayXuLy = ngayXuLy;
	}

	@Override
	public String getLanguage() {
		if (_language == null) {
			return "";
		}
		else {
			return _language;
		}
	}

	@Override
	public void setLanguage(String language) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_language = language;
	}

	@Override
	public int getLoaiTin() {
		return _loaiTin;
	}

	@Override
	public void setLoaiTin(int loaiTin) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_loaiTin = loaiTin;
	}

	@Override
	public int getIsFormHienBinhLuan() {
		return _isFormHienBinhLuan;
	}

	@Override
	public void setIsFormHienBinhLuan(int isFormHienBinhLuan) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_isFormHienBinhLuan = isFormHienBinhLuan;
	}

	@Override
	public int getIsFormViewBinhLuan() {
		return _isFormViewBinhLuan;
	}

	@Override
	public void setIsFormViewBinhLuan(int isFormViewBinhLuan) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_isFormViewBinhLuan = isFormViewBinhLuan;
	}

	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_status = status;
	}

	@Override
	public long getOrders() {
		return _orders;
	}

	@Override
	public void setOrders(long orders) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_orders = orders;
	}

	@Override
	public int getDelete_status() {
		return _delete_status;
	}

	@Override
	public void setDelete_status(int delete_status) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_delete_status = delete_status;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), AnPham_TapChi.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AnPham_TapChi toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, AnPham_TapChi>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AnPham_TapChiImpl anPham_TapChiImpl = new AnPham_TapChiImpl();

		anPham_TapChiImpl.setId(getId());
		anPham_TapChiImpl.setGroupId(getGroupId());
		anPham_TapChiImpl.setCompanyId(getCompanyId());
		anPham_TapChiImpl.setTen(getTen());
		anPham_TapChiImpl.setSlug(getSlug());
		anPham_TapChiImpl.setMoTa(getMoTa());
		anPham_TapChiImpl.setAnhDaiDien(getAnhDaiDien());
		anPham_TapChiImpl.setLoaiId(getLoaiId());
		anPham_TapChiImpl.setDeCuongId(getDeCuongId());
		anPham_TapChiImpl.setNoiDung(getNoiDung());
		anPham_TapChiImpl.setTuKhoa(getTuKhoa());
		anPham_TapChiImpl.setPhienBan(getPhienBan());
		anPham_TapChiImpl.setLuotXem(getLuotXem());
		anPham_TapChiImpl.setNguoiTao(getNguoiTao());
		anPham_TapChiImpl.setNgayTao(getNgayTao());
		anPham_TapChiImpl.setNguoiSua(getNguoiSua());
		anPham_TapChiImpl.setNgaySua(getNgaySua());
		anPham_TapChiImpl.setNguoiNhan(getNguoiNhan());
		anPham_TapChiImpl.setNguoiXuLy(getNguoiXuLy());
		anPham_TapChiImpl.setNgayXuLy(getNgayXuLy());
		anPham_TapChiImpl.setLanguage(getLanguage());
		anPham_TapChiImpl.setLoaiTin(getLoaiTin());
		anPham_TapChiImpl.setIsFormHienBinhLuan(getIsFormHienBinhLuan());
		anPham_TapChiImpl.setIsFormViewBinhLuan(getIsFormViewBinhLuan());
		anPham_TapChiImpl.setStatus(getStatus());
		anPham_TapChiImpl.setOrders(getOrders());
		anPham_TapChiImpl.setDelete_status(getDelete_status());

		anPham_TapChiImpl.resetOriginalValues();

		return anPham_TapChiImpl;
	}

	@Override
	public int compareTo(AnPham_TapChi anPham_TapChi) {
		int value = 0;

		if (getId() < anPham_TapChi.getId()) {
			value = -1;
		}
		else if (getId() > anPham_TapChi.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof AnPham_TapChi)) {
			return false;
		}

		AnPham_TapChi anPham_TapChi = (AnPham_TapChi)object;

		long primaryKey = anPham_TapChi.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<AnPham_TapChi> toCacheModel() {
		AnPham_TapChiCacheModel anPham_TapChiCacheModel =
			new AnPham_TapChiCacheModel();

		anPham_TapChiCacheModel.id = getId();

		anPham_TapChiCacheModel.groupId = getGroupId();

		anPham_TapChiCacheModel.companyId = getCompanyId();

		anPham_TapChiCacheModel.ten = getTen();

		String ten = anPham_TapChiCacheModel.ten;

		if ((ten != null) && (ten.length() == 0)) {
			anPham_TapChiCacheModel.ten = null;
		}

		anPham_TapChiCacheModel.slug = getSlug();

		String slug = anPham_TapChiCacheModel.slug;

		if ((slug != null) && (slug.length() == 0)) {
			anPham_TapChiCacheModel.slug = null;
		}

		anPham_TapChiCacheModel.moTa = getMoTa();

		String moTa = anPham_TapChiCacheModel.moTa;

		if ((moTa != null) && (moTa.length() == 0)) {
			anPham_TapChiCacheModel.moTa = null;
		}

		anPham_TapChiCacheModel.anhDaiDien = getAnhDaiDien();

		String anhDaiDien = anPham_TapChiCacheModel.anhDaiDien;

		if ((anhDaiDien != null) && (anhDaiDien.length() == 0)) {
			anPham_TapChiCacheModel.anhDaiDien = null;
		}

		anPham_TapChiCacheModel.loaiId = getLoaiId();

		anPham_TapChiCacheModel.deCuongId = getDeCuongId();

		anPham_TapChiCacheModel.noiDung = getNoiDung();

		String noiDung = anPham_TapChiCacheModel.noiDung;

		if ((noiDung != null) && (noiDung.length() == 0)) {
			anPham_TapChiCacheModel.noiDung = null;
		}

		anPham_TapChiCacheModel.tuKhoa = getTuKhoa();

		String tuKhoa = anPham_TapChiCacheModel.tuKhoa;

		if ((tuKhoa != null) && (tuKhoa.length() == 0)) {
			anPham_TapChiCacheModel.tuKhoa = null;
		}

		anPham_TapChiCacheModel.phienBan = getPhienBan();

		anPham_TapChiCacheModel.luotXem = getLuotXem();

		anPham_TapChiCacheModel.nguoiTao = getNguoiTao();

		Date ngayTao = getNgayTao();

		if (ngayTao != null) {
			anPham_TapChiCacheModel.ngayTao = ngayTao.getTime();
		}
		else {
			anPham_TapChiCacheModel.ngayTao = Long.MIN_VALUE;
		}

		anPham_TapChiCacheModel.nguoiSua = getNguoiSua();

		Date ngaySua = getNgaySua();

		if (ngaySua != null) {
			anPham_TapChiCacheModel.ngaySua = ngaySua.getTime();
		}
		else {
			anPham_TapChiCacheModel.ngaySua = Long.MIN_VALUE;
		}

		anPham_TapChiCacheModel.nguoiNhan = getNguoiNhan();

		anPham_TapChiCacheModel.nguoiXuLy = getNguoiXuLy();

		Date ngayXuLy = getNgayXuLy();

		if (ngayXuLy != null) {
			anPham_TapChiCacheModel.ngayXuLy = ngayXuLy.getTime();
		}
		else {
			anPham_TapChiCacheModel.ngayXuLy = Long.MIN_VALUE;
		}

		anPham_TapChiCacheModel.language = getLanguage();

		String language = anPham_TapChiCacheModel.language;

		if ((language != null) && (language.length() == 0)) {
			anPham_TapChiCacheModel.language = null;
		}

		anPham_TapChiCacheModel.loaiTin = getLoaiTin();

		anPham_TapChiCacheModel.isFormHienBinhLuan = getIsFormHienBinhLuan();

		anPham_TapChiCacheModel.isFormViewBinhLuan = getIsFormViewBinhLuan();

		anPham_TapChiCacheModel.status = getStatus();

		anPham_TapChiCacheModel.orders = getOrders();

		anPham_TapChiCacheModel.delete_status = getDelete_status();

		return anPham_TapChiCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<AnPham_TapChi, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<AnPham_TapChi, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AnPham_TapChi, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((AnPham_TapChi)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<AnPham_TapChi, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<AnPham_TapChi, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AnPham_TapChi, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((AnPham_TapChi)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, AnPham_TapChi>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private long _id;
	private long _groupId;
	private long _companyId;
	private String _ten;
	private String _slug;
	private String _moTa;
	private String _anhDaiDien;
	private long _loaiId;
	private long _deCuongId;
	private String _noiDung;
	private String _tuKhoa;
	private long _phienBan;
	private long _luotXem;
	private long _nguoiTao;
	private Date _ngayTao;
	private long _nguoiSua;
	private Date _ngaySua;
	private long _nguoiNhan;
	private long _nguoiXuLy;
	private Date _ngayXuLy;
	private String _language;
	private int _loaiTin;
	private int _isFormHienBinhLuan;
	private int _isFormViewBinhLuan;
	private int _status;
	private long _orders;
	private int _delete_status;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<AnPham_TapChi, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((AnPham_TapChi)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("id_", _id);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("ten", _ten);
		_columnOriginalValues.put("slug", _slug);
		_columnOriginalValues.put("moTa", _moTa);
		_columnOriginalValues.put("anhDaiDien", _anhDaiDien);
		_columnOriginalValues.put("loaiId", _loaiId);
		_columnOriginalValues.put("deCuongId", _deCuongId);
		_columnOriginalValues.put("noiDung", _noiDung);
		_columnOriginalValues.put("tuKhoa", _tuKhoa);
		_columnOriginalValues.put("phienBan", _phienBan);
		_columnOriginalValues.put("luotXem", _luotXem);
		_columnOriginalValues.put("nguoiTao", _nguoiTao);
		_columnOriginalValues.put("ngayTao", _ngayTao);
		_columnOriginalValues.put("nguoiSua", _nguoiSua);
		_columnOriginalValues.put("ngaySua", _ngaySua);
		_columnOriginalValues.put("nguoiNhan", _nguoiNhan);
		_columnOriginalValues.put("nguoiXuLy", _nguoiXuLy);
		_columnOriginalValues.put("ngayXuLy", _ngayXuLy);
		_columnOriginalValues.put("language", _language);
		_columnOriginalValues.put("loaiTin", _loaiTin);
		_columnOriginalValues.put("isFormHienBinhLuan", _isFormHienBinhLuan);
		_columnOriginalValues.put("isFormViewBinhLuan", _isFormViewBinhLuan);
		_columnOriginalValues.put("status", _status);
		_columnOriginalValues.put("orders", _orders);
		_columnOriginalValues.put("delete_status", _delete_status);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("id_", "id");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("id_", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("ten", 8L);

		columnBitmasks.put("slug", 16L);

		columnBitmasks.put("moTa", 32L);

		columnBitmasks.put("anhDaiDien", 64L);

		columnBitmasks.put("loaiId", 128L);

		columnBitmasks.put("deCuongId", 256L);

		columnBitmasks.put("noiDung", 512L);

		columnBitmasks.put("tuKhoa", 1024L);

		columnBitmasks.put("phienBan", 2048L);

		columnBitmasks.put("luotXem", 4096L);

		columnBitmasks.put("nguoiTao", 8192L);

		columnBitmasks.put("ngayTao", 16384L);

		columnBitmasks.put("nguoiSua", 32768L);

		columnBitmasks.put("ngaySua", 65536L);

		columnBitmasks.put("nguoiNhan", 131072L);

		columnBitmasks.put("nguoiXuLy", 262144L);

		columnBitmasks.put("ngayXuLy", 524288L);

		columnBitmasks.put("language", 1048576L);

		columnBitmasks.put("loaiTin", 2097152L);

		columnBitmasks.put("isFormHienBinhLuan", 4194304L);

		columnBitmasks.put("isFormViewBinhLuan", 8388608L);

		columnBitmasks.put("status", 16777216L);

		columnBitmasks.put("orders", 33554432L);

		columnBitmasks.put("delete_status", 67108864L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private AnPham_TapChi _escapedModel;

}
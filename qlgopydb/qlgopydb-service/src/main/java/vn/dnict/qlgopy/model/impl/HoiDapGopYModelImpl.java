/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package vn.dnict.qlgopy.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

import vn.dnict.qlgopy.model.HoiDapGopY;
import vn.dnict.qlgopy.model.HoiDapGopYModel;
import vn.dnict.qlgopy.model.HoiDapGopYSoap;

/**
 * The base model implementation for the HoiDapGopY service. Represents a row in the &quot;cw_gopy&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>HoiDapGopYModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link HoiDapGopYImpl}.
 * </p>
 *
 * @author dnict
 * @see HoiDapGopYImpl
 * @generated
 */
@JSON(strict = true)
public class HoiDapGopYModelImpl
	extends BaseModelImpl<HoiDapGopY> implements HoiDapGopYModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a hoi dap gop y model instance should use the <code>HoiDapGopY</code> interface instead.
	 */
	public static final String TABLE_NAME = "cw_gopy";

	public static final Object[][] TABLE_COLUMNS = {
		{"id_", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"name", Types.VARCHAR},
		{"tencoquan", Types.VARCHAR}, {"phone", Types.VARCHAR},
		{"email", Types.VARCHAR}, {"title", Types.VARCHAR},
		{"content", Types.VARCHAR}, {"answer", Types.VARCHAR},
		{"ngay_guigopy", Types.TIMESTAMP}, {"ngay_traloigopy", Types.TIMESTAMP},
		{"typeForm", Types.INTEGER}, {"is_traloi", Types.INTEGER},
		{"is_pheduyet", Types.INTEGER}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("id_", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tencoquan", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("phone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("email", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("title", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("content", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("answer", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ngay_guigopy", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ngay_traloigopy", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("typeForm", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("is_traloi", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("is_pheduyet", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE =
		"create table cw_gopy (id_ LONG not null primary key,companyId LONG,groupId LONG,name VARCHAR(75) null,tencoquan VARCHAR(75) null,phone VARCHAR(75) null,email VARCHAR(75) null,title VARCHAR(75) null,content VARCHAR(75) null,answer VARCHAR(75) null,ngay_guigopy DATE null,ngay_traloigopy DATE null,typeForm INTEGER,is_traloi INTEGER,is_pheduyet INTEGER)";

	public static final String TABLE_SQL_DROP = "drop table cw_gopy";

	public static final String ORDER_BY_JPQL = " ORDER BY hoiDapGopY.id DESC";

	public static final String ORDER_BY_SQL = " ORDER BY cw_gopy.id_ DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static HoiDapGopY toModel(HoiDapGopYSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		HoiDapGopY model = new HoiDapGopYImpl();

		model.setId(soapModel.getId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setName(soapModel.getName());
		model.setTencoquan(soapModel.getTencoquan());
		model.setPhone(soapModel.getPhone());
		model.setEmail(soapModel.getEmail());
		model.setTitle(soapModel.getTitle());
		model.setContent(soapModel.getContent());
		model.setAnswer(soapModel.getAnswer());
		model.setNgay_guigopy(soapModel.getNgay_guigopy());
		model.setNgay_traloigopy(soapModel.getNgay_traloigopy());
		model.setTypeForm(soapModel.getTypeForm());
		model.setIs_traloi(soapModel.getIs_traloi());
		model.setIs_pheduyet(soapModel.getIs_pheduyet());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static List<HoiDapGopY> toModels(HoiDapGopYSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<HoiDapGopY> models = new ArrayList<HoiDapGopY>(soapModels.length);

		for (HoiDapGopYSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public HoiDapGopYModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return HoiDapGopY.class;
	}

	@Override
	public String getModelClassName() {
		return HoiDapGopY.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<HoiDapGopY, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<HoiDapGopY, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<HoiDapGopY, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName, attributeGetterFunction.apply((HoiDapGopY)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<HoiDapGopY, Object>> attributeSetterBiConsumers =
			getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<HoiDapGopY, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(HoiDapGopY)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<HoiDapGopY, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<HoiDapGopY, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<HoiDapGopY, Object>>
		_attributeGetterFunctions;

	static {
		Map<String, Function<HoiDapGopY, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<HoiDapGopY, Object>>();

		attributeGetterFunctions.put("id", HoiDapGopY::getId);
		attributeGetterFunctions.put("companyId", HoiDapGopY::getCompanyId);
		attributeGetterFunctions.put("groupId", HoiDapGopY::getGroupId);
		attributeGetterFunctions.put("name", HoiDapGopY::getName);
		attributeGetterFunctions.put("tencoquan", HoiDapGopY::getTencoquan);
		attributeGetterFunctions.put("phone", HoiDapGopY::getPhone);
		attributeGetterFunctions.put("email", HoiDapGopY::getEmail);
		attributeGetterFunctions.put("title", HoiDapGopY::getTitle);
		attributeGetterFunctions.put("content", HoiDapGopY::getContent);
		attributeGetterFunctions.put("answer", HoiDapGopY::getAnswer);
		attributeGetterFunctions.put(
			"ngay_guigopy", HoiDapGopY::getNgay_guigopy);
		attributeGetterFunctions.put(
			"ngay_traloigopy", HoiDapGopY::getNgay_traloigopy);
		attributeGetterFunctions.put("typeForm", HoiDapGopY::getTypeForm);
		attributeGetterFunctions.put("is_traloi", HoiDapGopY::getIs_traloi);
		attributeGetterFunctions.put("is_pheduyet", HoiDapGopY::getIs_pheduyet);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
	}

	private static final Map<String, BiConsumer<HoiDapGopY, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, BiConsumer<HoiDapGopY, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<HoiDapGopY, ?>>();

		attributeSetterBiConsumers.put(
			"id", (BiConsumer<HoiDapGopY, Long>)HoiDapGopY::setId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<HoiDapGopY, Long>)HoiDapGopY::setCompanyId);
		attributeSetterBiConsumers.put(
			"groupId", (BiConsumer<HoiDapGopY, Long>)HoiDapGopY::setGroupId);
		attributeSetterBiConsumers.put(
			"name", (BiConsumer<HoiDapGopY, String>)HoiDapGopY::setName);
		attributeSetterBiConsumers.put(
			"tencoquan",
			(BiConsumer<HoiDapGopY, String>)HoiDapGopY::setTencoquan);
		attributeSetterBiConsumers.put(
			"phone", (BiConsumer<HoiDapGopY, String>)HoiDapGopY::setPhone);
		attributeSetterBiConsumers.put(
			"email", (BiConsumer<HoiDapGopY, String>)HoiDapGopY::setEmail);
		attributeSetterBiConsumers.put(
			"title", (BiConsumer<HoiDapGopY, String>)HoiDapGopY::setTitle);
		attributeSetterBiConsumers.put(
			"content", (BiConsumer<HoiDapGopY, String>)HoiDapGopY::setContent);
		attributeSetterBiConsumers.put(
			"answer", (BiConsumer<HoiDapGopY, String>)HoiDapGopY::setAnswer);
		attributeSetterBiConsumers.put(
			"ngay_guigopy",
			(BiConsumer<HoiDapGopY, Date>)HoiDapGopY::setNgay_guigopy);
		attributeSetterBiConsumers.put(
			"ngay_traloigopy",
			(BiConsumer<HoiDapGopY, Date>)HoiDapGopY::setNgay_traloigopy);
		attributeSetterBiConsumers.put(
			"typeForm",
			(BiConsumer<HoiDapGopY, Integer>)HoiDapGopY::setTypeForm);
		attributeSetterBiConsumers.put(
			"is_traloi",
			(BiConsumer<HoiDapGopY, Integer>)HoiDapGopY::setIs_traloi);
		attributeSetterBiConsumers.put(
			"is_pheduyet",
			(BiConsumer<HoiDapGopY, Integer>)HoiDapGopY::setIs_pheduyet);

		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_id = id;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return "";
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_name = name;
	}

	@JSON
	@Override
	public String getTencoquan() {
		if (_tencoquan == null) {
			return "";
		}
		else {
			return _tencoquan;
		}
	}

	@Override
	public void setTencoquan(String tencoquan) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tencoquan = tencoquan;
	}

	@JSON
	@Override
	public String getPhone() {
		if (_phone == null) {
			return "";
		}
		else {
			return _phone;
		}
	}

	@Override
	public void setPhone(String phone) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_phone = phone;
	}

	@JSON
	@Override
	public String getEmail() {
		if (_email == null) {
			return "";
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_email = email;
	}

	@JSON
	@Override
	public String getTitle() {
		if (_title == null) {
			return "";
		}
		else {
			return _title;
		}
	}

	@Override
	public void setTitle(String title) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_title = title;
	}

	@JSON
	@Override
	public String getContent() {
		if (_content == null) {
			return "";
		}
		else {
			return _content;
		}
	}

	@Override
	public void setContent(String content) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_content = content;
	}

	@JSON
	@Override
	public String getAnswer() {
		if (_answer == null) {
			return "";
		}
		else {
			return _answer;
		}
	}

	@Override
	public void setAnswer(String answer) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_answer = answer;
	}

	@JSON
	@Override
	public Date getNgay_guigopy() {
		return _ngay_guigopy;
	}

	@Override
	public void setNgay_guigopy(Date ngay_guigopy) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ngay_guigopy = ngay_guigopy;
	}

	@JSON
	@Override
	public Date getNgay_traloigopy() {
		return _ngay_traloigopy;
	}

	@Override
	public void setNgay_traloigopy(Date ngay_traloigopy) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ngay_traloigopy = ngay_traloigopy;
	}

	@JSON
	@Override
	public int getTypeForm() {
		return _typeForm;
	}

	@Override
	public void setTypeForm(int typeForm) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_typeForm = typeForm;
	}

	@JSON
	@Override
	public int getIs_traloi() {
		return _is_traloi;
	}

	@Override
	public void setIs_traloi(int is_traloi) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_is_traloi = is_traloi;
	}

	@JSON
	@Override
	public int getIs_pheduyet() {
		return _is_pheduyet;
	}

	@Override
	public void setIs_pheduyet(int is_pheduyet) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_is_pheduyet = is_pheduyet;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), HoiDapGopY.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public HoiDapGopY toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, HoiDapGopY>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		HoiDapGopYImpl hoiDapGopYImpl = new HoiDapGopYImpl();

		hoiDapGopYImpl.setId(getId());
		hoiDapGopYImpl.setCompanyId(getCompanyId());
		hoiDapGopYImpl.setGroupId(getGroupId());
		hoiDapGopYImpl.setName(getName());
		hoiDapGopYImpl.setTencoquan(getTencoquan());
		hoiDapGopYImpl.setPhone(getPhone());
		hoiDapGopYImpl.setEmail(getEmail());
		hoiDapGopYImpl.setTitle(getTitle());
		hoiDapGopYImpl.setContent(getContent());
		hoiDapGopYImpl.setAnswer(getAnswer());
		hoiDapGopYImpl.setNgay_guigopy(getNgay_guigopy());
		hoiDapGopYImpl.setNgay_traloigopy(getNgay_traloigopy());
		hoiDapGopYImpl.setTypeForm(getTypeForm());
		hoiDapGopYImpl.setIs_traloi(getIs_traloi());
		hoiDapGopYImpl.setIs_pheduyet(getIs_pheduyet());

		hoiDapGopYImpl.resetOriginalValues();

		return hoiDapGopYImpl;
	}

	@Override
	public int compareTo(HoiDapGopY hoiDapGopY) {
		int value = 0;

		if (getId() < hoiDapGopY.getId()) {
			value = -1;
		}
		else if (getId() > hoiDapGopY.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof HoiDapGopY)) {
			return false;
		}

		HoiDapGopY hoiDapGopY = (HoiDapGopY)object;

		long primaryKey = hoiDapGopY.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<HoiDapGopY> toCacheModel() {
		HoiDapGopYCacheModel hoiDapGopYCacheModel = new HoiDapGopYCacheModel();

		hoiDapGopYCacheModel.id = getId();

		hoiDapGopYCacheModel.companyId = getCompanyId();

		hoiDapGopYCacheModel.groupId = getGroupId();

		hoiDapGopYCacheModel.name = getName();

		String name = hoiDapGopYCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			hoiDapGopYCacheModel.name = null;
		}

		hoiDapGopYCacheModel.tencoquan = getTencoquan();

		String tencoquan = hoiDapGopYCacheModel.tencoquan;

		if ((tencoquan != null) && (tencoquan.length() == 0)) {
			hoiDapGopYCacheModel.tencoquan = null;
		}

		hoiDapGopYCacheModel.phone = getPhone();

		String phone = hoiDapGopYCacheModel.phone;

		if ((phone != null) && (phone.length() == 0)) {
			hoiDapGopYCacheModel.phone = null;
		}

		hoiDapGopYCacheModel.email = getEmail();

		String email = hoiDapGopYCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			hoiDapGopYCacheModel.email = null;
		}

		hoiDapGopYCacheModel.title = getTitle();

		String title = hoiDapGopYCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			hoiDapGopYCacheModel.title = null;
		}

		hoiDapGopYCacheModel.content = getContent();

		String content = hoiDapGopYCacheModel.content;

		if ((content != null) && (content.length() == 0)) {
			hoiDapGopYCacheModel.content = null;
		}

		hoiDapGopYCacheModel.answer = getAnswer();

		String answer = hoiDapGopYCacheModel.answer;

		if ((answer != null) && (answer.length() == 0)) {
			hoiDapGopYCacheModel.answer = null;
		}

		Date ngay_guigopy = getNgay_guigopy();

		if (ngay_guigopy != null) {
			hoiDapGopYCacheModel.ngay_guigopy = ngay_guigopy.getTime();
		}
		else {
			hoiDapGopYCacheModel.ngay_guigopy = Long.MIN_VALUE;
		}

		Date ngay_traloigopy = getNgay_traloigopy();

		if (ngay_traloigopy != null) {
			hoiDapGopYCacheModel.ngay_traloigopy = ngay_traloigopy.getTime();
		}
		else {
			hoiDapGopYCacheModel.ngay_traloigopy = Long.MIN_VALUE;
		}

		hoiDapGopYCacheModel.typeForm = getTypeForm();

		hoiDapGopYCacheModel.is_traloi = getIs_traloi();

		hoiDapGopYCacheModel.is_pheduyet = getIs_pheduyet();

		return hoiDapGopYCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<HoiDapGopY, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<HoiDapGopY, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<HoiDapGopY, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((HoiDapGopY)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<HoiDapGopY, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<HoiDapGopY, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<HoiDapGopY, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((HoiDapGopY)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, HoiDapGopY>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					HoiDapGopY.class, ModelWrapper.class);

	}

	private long _id;
	private long _companyId;
	private long _groupId;
	private String _name;
	private String _tencoquan;
	private String _phone;
	private String _email;
	private String _title;
	private String _content;
	private String _answer;
	private Date _ngay_guigopy;
	private Date _ngay_traloigopy;
	private int _typeForm;
	private int _is_traloi;
	private int _is_pheduyet;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<HoiDapGopY, Object> function = _attributeGetterFunctions.get(
			columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((HoiDapGopY)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("id_", _id);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("name", _name);
		_columnOriginalValues.put("tencoquan", _tencoquan);
		_columnOriginalValues.put("phone", _phone);
		_columnOriginalValues.put("email", _email);
		_columnOriginalValues.put("title", _title);
		_columnOriginalValues.put("content", _content);
		_columnOriginalValues.put("answer", _answer);
		_columnOriginalValues.put("ngay_guigopy", _ngay_guigopy);
		_columnOriginalValues.put("ngay_traloigopy", _ngay_traloigopy);
		_columnOriginalValues.put("typeForm", _typeForm);
		_columnOriginalValues.put("is_traloi", _is_traloi);
		_columnOriginalValues.put("is_pheduyet", _is_pheduyet);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("id_", "id");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("id_", 1L);

		columnBitmasks.put("companyId", 2L);

		columnBitmasks.put("groupId", 4L);

		columnBitmasks.put("name", 8L);

		columnBitmasks.put("tencoquan", 16L);

		columnBitmasks.put("phone", 32L);

		columnBitmasks.put("email", 64L);

		columnBitmasks.put("title", 128L);

		columnBitmasks.put("content", 256L);

		columnBitmasks.put("answer", 512L);

		columnBitmasks.put("ngay_guigopy", 1024L);

		columnBitmasks.put("ngay_traloigopy", 2048L);

		columnBitmasks.put("typeForm", 4096L);

		columnBitmasks.put("is_traloi", 8192L);

		columnBitmasks.put("is_pheduyet", 16384L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private HoiDapGopY _escapedModel;

}